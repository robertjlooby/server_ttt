// Generated by CoffeeScript 1.6.2
(function() {
  var TicTacToe;

  TicTacToe = {
    resetBoard: function(marker) {
      return $("div#board").html("<div id=\"row0\"><div id=\"cell0\"><button type=\"button\" class=\"button\" onclick=\"TicTacToe.makeMove('" + marker + "', '_________', 0)\">0</button></div><div id=\"cell1\"><button type=\"button\" class=\"button\" onclick=\"TicTacToe.makeMove('" + marker + "', '_________', 1)\">1</button></div><div id=\"cell2\"><button type=\"button\" class=\"button\" onclick=\"TicTacToe.makeMove('" + marker + "', '_________', 2)\">2</button></div></div><div id=\"row1\"><div id=\"cell3\"><button type=\"button\" class=\"button\" onclick=\"TicTacToe.makeMove('" + marker + "', '_________', 3)\">3</button></div><div id=\"cell4\"><button type=\"button\" class=\"button\" onclick=\"TicTacToe.makeMove('" + marker + "', '_________', 4)\">4</button></div><div id=\"cell5\"><button type=\"button\" class=\"button\" onclick=\"TicTacToe.makeMove('" + marker + "', '_________', 5)\">5</button></div></div><div id=\"row2\"><div id=\"cell6\"><button type=\"button\" class=\"button\" onclick=\"TicTacToe.makeMove('" + marker + "', '_________', 6)\">6</button></div><div id=\"cell7\"><button type=\"button\" class=\"button\" onclick=\"TicTacToe.makeMove('" + marker + "', '_________', 7)\">7</button></div><div id=\"cell8\"><button type=\"button\" class=\"button\" onclick=\"TicTacToe.makeMove('" + marker + "', '_________', 8)\">8</button></div></div>");
    },
    hideButtons: function() {
      return $(".button").hide();
    },
    showButtons: function() {
      return $(".button").show();
    },
    getNewBoardState: function(marker, boardState, cellNum) {
      return "" + (boardState.slice(0, cellNum)) + marker + (boardState.slice(cellNum + 1));
    },
    setUpBoard: function(marker) {
      $("form").hide();
      TicTacToe.resetBoard(marker);
      return TicTacToe.hideButtons();
    },
    updateBoardHuman: function(marker, boardState, move) {
      TicTacToe.hideButtons();
      $("#cell" + move).html(marker);
      return $(".button").each(function() {
        return $(this).attr("onclick", function(index, oldHtml) {
          return oldHtml.replace(/[XO_]{9}/, boardState);
        });
      });
    },
    updateBoardAI: function(aiMarker, boardState, aiMove, result) {
      $("#cell" + aiMove).html(aiMarker);
      $(".button").each(function() {
        return $(this).attr("onclick", function(index, oldHtml) {
          return oldHtml.replace(/[XO_]{9}/, boardState);
        });
      });
      switch (result) {
        case "W":
          $("#board").prepend("<h1>You Win!</h1>");
          return $("form").show();
        case "L":
          $("#board").prepend("<h1>You Lose!</h1>");
          return $("form").show();
        case "T":
          $("#board").prepend("<h1>It is a Tie!</h1>");
          return $("form").show();
        default:
          return TicTacToe.showButtons();
      }
    },
    makeMove: function(marker, boardState, cellNum) {
      var aiMarker, newBoardState;
      newBoardState = TicTacToe.getNewBoardState(marker, boardState, cellNum);
      TicTacToe.updateBoardHuman(marker, newBoardState, cellNum);
      aiMarker = marker === "X" ? "O" : "X";
      return $.ajax({
        data: {
          marker: marker,
          board_state: newBoardState
        },
        dataType: "json",
        async: true,
        type: "POST",
        url: "/game",
        success: function(json) {
          return TicTacToe.updateBoardAI(aiMarker, json.boardState, json.aiMove, json.result);
        }
      });
    },
    initializeGame: function() {
      var aiMarker, marker, move;
      marker = $("input[name='marker']:checked").val();
      move = $("input[name='move']:checked").val();
      TicTacToe.setUpBoard(marker);
      aiMarker = marker === "X" ? "O" : "X";
      return $.ajax({
        data: {
          marker: marker,
          move: move
        },
        dataType: "json",
        async: true,
        type: "POST",
        url: "/",
        success: function(json) {
          return TicTacToe.updateBoardAI(aiMarker, json.boardState, json.aiMove, json.result);
        }
      });
    }
  };

  (typeof exports !== "undefined" && exports !== null ? exports : this).TicTacToe = TicTacToe;

}).call(this);
