// Generated by CoffeeScript 1.6.2
(function() {
  var TicTacToe;

  TicTacToe = {
    buttonsEnabled: false,
    boardState: "_________",
    resetBoard: function(marker) {
      var cell, col, row, str, _i, _j, _k, _results;
      str = "";
      for (row = _i = 0; _i <= 2; row = ++_i) {
        str += "<div id=\"row" + row + "\">";
        for (col = _j = 0; _j <= 2; col = ++_j) {
          cell = (3 * row) + col;
          str += "<div id=\"cell" + cell + "\">                  <button type=\"button\" class=\"button\">" + cell + "</button>                </div>";
        }
        str += "</div>";
      }
      $("#board").html(str);
      TicTacToe.buttonsEnabled = false;
      TicTacToe.boardState = "_________";
      _results = [];
      for (cell = _k = 0; _k <= 8; cell = ++_k) {
        _results.push((function(cell) {
          return $("#cell" + cell + " .button").click(function() {
            if (TicTacToe.buttonsEnabled) {
              return TicTacToe.makeMove(marker, TicTacToe.boardState, cell);
            }
          });
        })(cell));
      }
      return _results;
    },
    disableButtons: function() {
      return TicTacToe.buttonsEnabled = false;
    },
    enableButtons: function() {
      return TicTacToe.buttonsEnabled = true;
    },
    getNewBoardState: function(marker, boardState, cellNum) {
      return "" + (boardState.slice(0, cellNum)) + marker + (boardState.slice(cellNum + 1));
    },
    setUpBoard: function(marker) {
      $("form").hide();
      return TicTacToe.resetBoard(marker);
    },
    updateBoardHuman: function(marker, boardState, move) {
      TicTacToe.disableButtons();
      $("#cell" + move).html(marker);
      return TicTacToe.boardState = boardState;
    },
    updateBoardAI: function(aiMarker, boardState, aiMove, result) {
      $("#cell" + aiMove).html(aiMarker);
      TicTacToe.boardState = boardState;
      switch (result) {
        case "W":
          $("#board").prepend("<h1>You Win!</h1>");
          return $("form").show();
        case "L":
          $("#board").prepend("<h1>You Lose!</h1>");
          return $("form").show();
        case "T":
          $("#board").prepend("<h1>It is a Tie!</h1>");
          return $("form").show();
        default:
          return TicTacToe.enableButtons();
      }
    },
    makeMove: function(marker, boardState, cellNum) {
      var aiMarker, newBoardState;
      newBoardState = TicTacToe.getNewBoardState(marker, boardState, cellNum);
      TicTacToe.updateBoardHuman(marker, newBoardState, cellNum);
      aiMarker = marker === "X" ? "O" : "X";
      return $.ajax({
        data: {
          marker: marker,
          board_state: newBoardState
        },
        dataType: "json",
        async: true,
        type: "POST",
        url: "/game",
        success: function(json) {
          return TicTacToe.updateBoardAI(aiMarker, json.boardState, json.aiMove, json.result);
        }
      });
    },
    initializeGame: function() {
      var aiMarker, marker, move;
      marker = $("input[name='marker']:checked").val();
      move = $("input[name='move']:checked").val();
      TicTacToe.setUpBoard(marker);
      aiMarker = marker === "X" ? "O" : "X";
      return $.ajax({
        data: {
          marker: marker,
          move: move
        },
        dataType: "json",
        async: true,
        type: "POST",
        url: "/",
        success: function(json) {
          return TicTacToe.updateBoardAI(aiMarker, json.boardState, json.aiMove, json.result);
        }
      });
    }
  };

  (typeof exports !== "undefined" && exports !== null ? exports : this).TicTacToe = TicTacToe;

}).call(this);
